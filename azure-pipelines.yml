# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  major: 1
  minor: 1
  revision: $[counter('rev', 0)]
  branchLabel: $(System.PullRequest.SourceBranch)

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- powershell: |
    [Reflection.Assembly]::LoadWithPartialName("System.Xml.Linq")
    $path = "PlanomaticPackage/Package.appxmanifest"
    $doc = [System.Xml.Linq.XDocument]::Load($path)
    $xIdentity = [System.Xml.Linq.XName]"{http://schemas.microsoft.com/appx/manifest/foundation/windows10}Identity"
    $doc.Root.Element($xIdentity).Attribute("Version").Value = "$(major).$(minor).$(revision).0"
    $doc.Root.Element($xIdentity).Attribute("Name").Value = "Planomatic$(branchLabel)"
    $doc.Root.Element([System.Xml.Linq.XName]"{http://schemas.microsoft.com/appx/manifest/foundation/windows10}Properties"). `
        Element([System.Xml.Linq.XName]"{http://schemas.microsoft.com/appx/manifest/foundation/windows10}DisplayName").Value = "Planomatic_$(branchLabel)"
    $doc.Save($path)
  displayName: 'Version and Branch Name Package Manifest'

- powershell: |
   ((Get-Content -path PlanoWeb\plano.appinstaller -Raw) -replace '<msix_version>','$(major).$(minor).$(revision).0' `
                                                         -replace '<msix_name>','Planomatic_$(branchLabel)_$(major).$(minor).$(revision).0.msix' `
                                                         -replace '<display_name>','Planomatic_$(branchLabel)') `
        | Set-Content -Path $(Build.ArtifactStagingDirectory)\plano_$(branchLabel).appinstaller
  displayName: 'Update Appinstaller file'

- task: MSBuild@1
  inputs:
    solution: $(solution)
    platform: $(buildPlatform)
    configuration: $(buildConfiguration)
    msbuildArguments: '/p:AppxPackageOutput=$(Build.ArtifactStagingDirectory)\Planomatic_$(branchLabel)_$(major).$(minor).$(revision).0.msix /p:AppxPackageSigningEnabled=false'
  displayName: 'Build and Package'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'certificate.pfx'
  displayName: 'Download Secure PFX File'

- script: '"C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x86\signtool"
    sign /fd SHA256 /f $(Agent.TempDirectory)/certificate.pfx /p 1234 $(Build.ArtifactStagingDirectory)/Planomatic_$(branchLabel)_$(major).$(minor).$(revision).0.msix'
  displayName: 'Sign MSIX Package'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

- task: AzureFileCopy@4
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)\*'
    azureSubscription: 'planostorage'
    Destination: 'AzureBlob'
    storage: 'planomaticstorage'
    ContainerName: '$web'
    targetPath: 'branch'
    
